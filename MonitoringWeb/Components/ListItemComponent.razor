@using MonitoringWeb.Model
@code {
    [Parameter]
    public required SystemInfoRecord Item { get; set; }
    private double MemoryLoad => Item.UsedMemory / Item.TotalMemory * 100;

    private string GetColorGradient(double load)
    {
        int red, green, blue = 0;

        if (load <= 50)
        {
            // Green to Yellow
            red = (int)(255 * (load / 50.0)); // Transition from 0 to 255
            green = 255; // Maximum green
        }
        else
        {
            // Yellow to Red
            red = 255; // Maximum red
            green = (int)(255 * (1 - (load - 50) / 50.0)); // Transition from 255 to 0
        }

        return $"rgb({red},{green},{blue})";
    }
}
<tr class="list-item">
    <td>@Item.HostName</td>
    <td>@Item.OperatingSystem</td>
    <td>@Item.UserName</td>
    <td>
        <div class="load-bar">
            <div class="load-fill" style="width: @string.Format("{0:N1}%", @Item.CPULoad); background-color: @GetColorGradient(double.Parse(Item.CPULoad, System.Globalization.NumberStyles.Float, System.Globalization.CultureInfo.InvariantCulture));"></div>
        </div>
        <span>@Item.CPULoad%</span>
    </td>
    <td>
        <div class="load-bar">
            <div class="load-fill" style="width: @string.Format("{0:N0}%", MemoryLoad); background-color: @GetColorGradient(MemoryLoad);"></div>
        </div>
        <span>@string.Format("{0:N2} GB", @Item.UsedMemory)</span>
        <span>@string.Format("{0:N0}%", MemoryLoad)</span>
    </td>
    <td>@string.Format("{0:N2} GB", @Item.TotalMemory)</td>
    <td>@Item.UpTime.ToString(@"hh\:mm\:ss")</td>
    <td>@Item.TimeStamp</td>
</tr>

<style>
    .load-bar {
        width: 100px;
        height: 20px;
        background-color: #e0e0e0;
        border-radius: 5px;
        overflow: hidden;
        display: inline-block;
        vertical-align: middle;
        margin-right: 10px;
    }

    .load-fill {
        height: 100%;
        transition: width 0.5s ease-in-out, background-color 0.5s ease-in-out;
    }
</style>